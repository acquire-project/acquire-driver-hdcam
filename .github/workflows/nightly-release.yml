name: Create nightly release

on:
  schedule:
    - cron: "0 5 * * *"  # runs at 5 AM UTC

jobs:
  nightly-windows-build:
    name: "Nightly build on Windows with DCAM SDK"
    runs-on: [ self-hosted, dcam ]

    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Enable long paths
        run: |
          git config --global core.longpaths true
        shell: pwsh

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get CMake 3.24
        uses: lukka/get-cmake@latest
        with:
          useCloudCache: false
          useLocalCache: true
          cmakeVersion: 3.24.3

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config Release
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C Release -G ZIP

      - uses: actions/upload-artifact@v3
        with:
          name: Windows Release binaries
          path: ${{github.workspace}}/*.zip

  nightly-unsupported-build:
    name: "Nightly build on Mac and Ubuntu"
    strategy:
      matrix:
        platform: [ "ubuntu-latest", "macos-latest" ]

    runs-on: ${{ matrix.platform }}

    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config Release
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C Release -G ZIP

      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.platform}} Release binaries
          path: ${{github.workspace}}/*.zip

  nightly-release:
    needs: [ nightly-windows-build, nightly-unsupported-build ]
    name: "Nightly Release"
    runs-on: "ubuntu-latest"

    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          path: ${{ github.workspace }}/artifacts

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Nightly Release"
          files: |
            ${{steps.download.outputs.download-path}}/*/*.zip